#include <iostream>

using namespace std;

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

                                                1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Answer: 4613732
*/

/*
Constraints
T = [1, 10^5]
N = [10, 4 * 10^16]
*/

void ProjectEuler002(){
    int T = 3;
    int N[] = {10, 100, 4000000};

    for(int i = 0; i < T; i++){
        long n = N[i];

        long evenSum = 0, prev = 1, cur = 2, tmp;
        while (cur <= n) {
            if(cur % 2 == 0){
                evenSum += cur;
            }

            tmp = cur;
            cur += prev;
            prev = tmp;
        }

        cout << evenSum << endl;
    }

    return;
}
